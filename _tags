# OASIS_START
# DO NOT EDIT (digest: 21f4aadf1bb4021c52d69cdb7cbff25c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library ciso
"lib/ciso.cmxs": use_ciso
<lib/*.ml{,i,y}>: pkg_fmt
<lib/*.ml{,i,y}>: pkg_irmin.unix
<lib/*.ml{,i,y}>: pkg_lwt
<lib/*.ml{,i,y}>: pkg_sexplib
<lib/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/*.ml{,i,y}>: pkg_uuidm
# Library ciso-worker
"lib/worker/ciso-worker.cmxs": use_ciso-worker
<lib/worker/*.ml{,i,y}>: pkg_cohttp.lwt
<lib/worker/*.ml{,i,y}>: pkg_fmt
<lib/worker/*.ml{,i,y}>: pkg_irmin.unix
<lib/worker/*.ml{,i,y}>: pkg_lwt
<lib/worker/*.ml{,i,y}>: pkg_ocamlgraph
<lib/worker/*.ml{,i,y}>: pkg_opam-lib.client
<lib/worker/*.ml{,i,y}>: pkg_sexplib
<lib/worker/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/worker/*.ml{,i,y}>: pkg_stringext
<lib/worker/*.ml{,i,y}>: pkg_uuidm
<lib/worker/*.ml{,i,y}>: use_ciso
# Library ciso-master
"lib/master/ciso-master.cmxs": use_ciso-master
<lib/master/*.ml{,i,y}>: pkg_fmt
<lib/master/*.ml{,i,y}>: pkg_irmin.unix
<lib/master/*.ml{,i,y}>: pkg_lwt
<lib/master/*.ml{,i,y}>: pkg_sexplib
<lib/master/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/master/*.ml{,i,y}>: pkg_uuidm
<lib/master/*.ml{,i,y}>: use_ciso
# Library ciso-github
"lib/github/ciso-github.cmxs": use_ciso-github
<lib/github/*.ml{,i,y}>: pkg_cohttp.lwt
<lib/github/*.ml{,i,y}>: pkg_fmt
<lib/github/*.ml{,i,y}>: pkg_github.unix
<lib/github/*.ml{,i,y}>: pkg_irmin.unix
<lib/github/*.ml{,i,y}>: pkg_lwt
<lib/github/*.ml{,i,y}>: pkg_ocamlgraph
<lib/github/*.ml{,i,y}>: pkg_opam-lib.client
<lib/github/*.ml{,i,y}>: pkg_sexplib
<lib/github/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/github/*.ml{,i,y}>: pkg_stringext
<lib/github/*.ml{,i,y}>: pkg_uuidm
<lib/github/*.ml{,i,y}>: use_ciso
<lib/github/*.ml{,i,y}>: use_ciso-worker
# Executable ciso-store
<bin/store_main.{native,byte}>: pkg_cmdliner
<bin/store_main.{native,byte}>: pkg_fmt
<bin/store_main.{native,byte}>: pkg_irmin.unix
<bin/store_main.{native,byte}>: pkg_lwt
<bin/store_main.{native,byte}>: pkg_sexplib
<bin/store_main.{native,byte}>: pkg_sexplib.syntax
<bin/store_main.{native,byte}>: pkg_uuidm
<bin/store_main.{native,byte}>: use_ciso
<bin/store_main.{native,byte}>: custom
# Executable ciso-worker
<bin/worker_main.{native,byte}>: pkg_cmdliner
<bin/worker_main.{native,byte}>: pkg_cohttp.lwt
<bin/worker_main.{native,byte}>: pkg_fmt
<bin/worker_main.{native,byte}>: pkg_irmin.unix
<bin/worker_main.{native,byte}>: pkg_lwt
<bin/worker_main.{native,byte}>: pkg_ocamlgraph
<bin/worker_main.{native,byte}>: pkg_opam-lib.client
<bin/worker_main.{native,byte}>: pkg_sexplib
<bin/worker_main.{native,byte}>: pkg_sexplib.syntax
<bin/worker_main.{native,byte}>: pkg_stringext
<bin/worker_main.{native,byte}>: pkg_uuidm
<bin/worker_main.{native,byte}>: use_ciso
<bin/worker_main.{native,byte}>: use_ciso-worker
<bin/*.ml{,i,y}>: pkg_cohttp.lwt
<bin/*.ml{,i,y}>: pkg_ocamlgraph
<bin/*.ml{,i,y}>: pkg_opam-lib.client
<bin/*.ml{,i,y}>: pkg_stringext
<bin/*.ml{,i,y}>: use_ciso-worker
# Executable ciso-master
<bin/master_main.{native,byte}>: pkg_cmdliner
<bin/master_main.{native,byte}>: pkg_fmt
<bin/master_main.{native,byte}>: pkg_irmin.unix
<bin/master_main.{native,byte}>: pkg_lwt
<bin/master_main.{native,byte}>: pkg_sexplib
<bin/master_main.{native,byte}>: pkg_sexplib.syntax
<bin/master_main.{native,byte}>: pkg_uuidm
<bin/master_main.{native,byte}>: use_ciso
<bin/master_main.{native,byte}>: use_ciso-master
<bin/*.ml{,i,y}>: pkg_cmdliner
<bin/*.ml{,i,y}>: pkg_fmt
<bin/*.ml{,i,y}>: pkg_irmin.unix
<bin/*.ml{,i,y}>: pkg_lwt
<bin/*.ml{,i,y}>: pkg_sexplib
<bin/*.ml{,i,y}>: pkg_sexplib.syntax
<bin/*.ml{,i,y}>: pkg_uuidm
<bin/*.ml{,i,y}>: use_ciso
<bin/*.ml{,i,y}>: use_ciso-master
# OASIS_STOP
true: debug, bin_annot
true: warn(+A-4-41-44), warn_error(A-4-41-44)
