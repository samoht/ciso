(*
 * Copyright (c) 2013-2015 David Sheets <sheets@alum.mit.edu>
 * Copyright (c)      2015 Qi Li <liqi0425@gmail.com>
 * Copyright (c)      2015 Thomas Gazagnaire <thomas@gazagnaire.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *)

(* FIXME: find a better name than object? *)

(** Objects. *)

(* FIXME: should not be defined here *)
type result = [
  | `Success
  | `Fail of string
  | `Delegate of Common_types.id
]
(** The type for job result. *)

val string_of_result: result -> string
(** [string_of_result r] is the string representation of [r]. *)

type t
(** The type for object values. *)

val to_string: t -> string
(** [to_string t] is the string representing [t]. *)

val of_string: string -> t
(** [of_string s] is the object [t] whose string representation is
    [s]. *)

val result: t -> result
(** [result t] is [t]'s result. *)

val id: t -> Common_types.id
(** [id t] is [t]'s id. *)

(* FIXME: weird type *)
val outputs: t -> string list * (string * string)
(** [outputs t] are the files generated by the object [t]. *)

val create:
  id:Common_types.id -> result:result -> output:string list ->
  installed:string list -> archive:(string * string) -> t
